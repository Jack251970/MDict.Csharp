name: publish

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:

  build:

    permissions:
      contents: write
    
    runs-on: windows-latest

    env:
      Solution_Path: MDict.Csharp.sln
      Project_Path: MDict.Csharp\MDict.Csharp.csproj
      Output_Nuget_Path: MDict.Csharp\bin\Release\MDict.Csharp.*.nupkg

    steps:

      # Checkout codes
      - name: Checkout
        uses: actions/checkout@v4

      # Install the .NET Core workload
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            7.0.x
            9.0.x

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore ${{ env.Solution_Path }}

      # Build the project
      - name: Build
        run: dotnet build ${{ env.Solution_Path }} --configuration Release --no-restore

      # Execute all unit tests in the solution
      - name: Execute unit tests
        run: dotnet test ${{ env.Solution_Path }} --configuration Release --no-build

      # Pack the NuGet package
      - name: Create NuGet package
        run: dotnet pack ${{ env.Project_Path }} --configuration Release --no-build --output nupkgs

    #   # Publish to NuGet
    #   - name: Publish to NuGet
    #     run: nuget push ${{ env.Output_Nuget_Path }} -source 'https://api.nuget.org/v3/index.json' -apikey ${{secrets.publish}}

      # Get package version
      - name: Get Package Version
        run: |
         $version = [system.diagnostics.fileversioninfo]::getversioninfo("MDict.Csharp\bin\Release\MDict.Csharp.dll").productversion
         echo "release_version=$version" | out-file -filepath $env:github_env -encoding utf-8 -append

      # Publish to GitHub releases
      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          files: "MDict.Csharp\\bin\\Release\\*.nupkg"
          tag_name: "v${{ env.release_version }}"